/**
 * Enum que define os tipos de controle (`CONTROL_TYPE`) disponíveis para a apresentação dos campos de formulário.
 *
 * O `CONTROL_TYPE` especifica o tipo de elemento de UI (User Interface) que será usado para capturar ou exibir dados do campo.
 * Essa configuração permite que a camada de apresentação saiba como renderizar o campo e oferecer a interação adequada ao usuário.
 * Em casos onde o `CONTROL_TYPE` não é especificado, a camada de apresentação pode usar o valor de `TYPE` (definido em `FieldDataType`)
 * para decidir o controle mais adequado de forma automática.
 */
export const FieldControlType = {
  AI_PROMPT: 'aiPrompt',
  APP_BAR: 'appBar',
  ARC_GAUGE: 'arcGauge',
  ARRAY_INPUT: 'array',
  AUTO_COMPLETE: 'autoComplete',
  AVATAR: 'avatar',
  BARCODE_GENERATOR: 'barcodeGenerator',
  BOTTOM_NAVIGATION: 'bottomNavigation',
  BREADCRUMB: 'breadcrumb',
  BUTTON: 'button',
  BUTTON_GROUP: 'buttonGroup',
  CALENDAR: 'calendar',
  CARD: 'card',
  CHECKBOX: 'checkbox',
  CHIP_INPUT: 'chipInput',
  CHIP_LIST: 'chipList',
  CIRCULAR_GAUGE: 'circularGauge',
  COLOR_GRADIENT: 'colorGradient',
  COLOR_PALETTE: 'colorPalette',
  COLOR_PICKER: 'colorPicker',
  CONTEXT_MENU: 'contextMenu',
  CONVERSATIONAL_UI: 'conversationalUI',
  CURRENCY_INPUT: 'currency',
  DATE_PICKER: 'date',
  DATE_RANGE: 'dateRange',
  DATE_TIME_PICKER: 'dateTime',
  DATE_TIME_RANGE: 'dateTimeRange',
  DIALOG: 'dialog',
  DRAWER: 'drawer',
  DROP_DOWN_TREE: 'dropDownTree',
  EMAIL_INPUT: 'email',
  EXPANSION_PANEL: 'expansionPanel',
  FILE_SAVER: 'fileSaver',
  FILE_SELECT: 'fileSelect',
  FILE_UPLOAD: 'upload',
  FILTER: 'filter',
  FLOATING_LABEL: 'floatingLabel',
  FLOATING_ACTION_BUTTON: 'floatingActionButton',
  GRID: 'grid',
  GRID_LAYOUT: 'gridLayout',
  INPUT: 'input',
  LINEAR_GAUGE: 'linearGauge',
  LIST_VIEW: 'listView',
  MAP: 'map',
  MASKED_TEXT_BOX: 'maskedTextBox',
  MULTI_COLUMN_COMBO_BOX: 'multiColumnComboBox',
  MULTI_SELECT: 'multiSelect',
  MULTI_SELECT_TREE: 'multiSelectTree',
  NOTIFICATION: 'notification',
  NUMERIC_TEXT_BOX: 'numericTextBox',
  PAGER: 'pager',
  PAGINATOR: 'paginator',
  PASSWORD: 'password',
  PDF_VIEWER: 'pdfViewer',
  PHONE: 'phone',
  PIVOT_GRID: 'pivotGrid',
  POPUP: 'popup',
  PROGRESS_BAR: 'progressBar',
  PROGRESS_SPINNER: 'progressSpinner',
  QR_CODE: 'qrCode',
  RADIO: 'radio',
  RADIAL_GAUGE: 'radialGauge',
  RANGE_SLIDER: 'rangeSlider',
  RATING: 'rating',
  RICH_TEXT_EDITOR: 'richTextEditor',
  RIPPLE: 'ripple',
  SCROLL_VIEW: 'scrollView',
  SELECT: 'select',
  SIGNATURE: 'signature',
  SLIDER: 'slider',
  SORTABLE: 'sortable',
  SORTABLE_TABLE: 'sortableTable',
  SPLITTER: 'splitter',
  SPREADSHEET: 'spreadsheet',
  STACK_LAYOUT: 'stackLayout',
  STEP_BAR: 'stepBar',
  STEPPER: 'stepper',
  SVG_ICON: 'svgIcon',
  TABS: 'tabs',
  TEXTAREA: 'textarea',
  TIME_PICKER: 'timePicker',
  TIMELINE: 'timeline',
  TOGGLE: 'toggle',
  TOOLBAR: 'toolbar',
  TOOLTIP: 'tooltip',
  TREE_VIEW: 'treeView',
  TYPOGRAPHY: 'typography',
  URL_INPUT: 'url',
  WINDOW: 'window',
} as const;

export type FieldControlType = typeof FieldControlType[keyof typeof FieldControlType];
